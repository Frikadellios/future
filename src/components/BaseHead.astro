---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.

import { ClientRouter } from 'astro:transitions'

interface Props {
  title: string
  description: string
  image?: string
}

const { title, description, image = '/favicon.svg' } = Astro.props
---

<!-- Global Metadata -->
<meta charset="UTF-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="icon" type="image/svg+xml" href="/favicon.ico" />
<meta name="generator" content={Astro.generator} />


<meta name="generator" content={Astro.generator} />
<meta name="title" content={title} />
<meta name="description" content={description} />

<link rel="sitemap" href="/sitemap-index.xml" />
<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />

<link rel="alternate" type="application/rss+xml" title={title} href={`${Astro.site}rss.xml`}/>
<meta name="robots" content="max-snippet:-1, max-image-preview:large, max-video-preview:-1">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">


<!-- Font preloads -->
<link
    rel="preload"
    href="/fonts/inter.woff2"
    as="font"
    type="font/woff2"
    crossorigin
/>


<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />





<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">


<!-- Global Scripts -->
<script is:inline src="/js/theme.js"></script>
<script is:inline src="/js/scroll.js"></script>
<script is:inline src="/js/animate.js"></script>

<!-- <ViewTransitions  /> -->

<script>
    import type { TransitionBeforeSwapEvent } from 'astro:transitions/client'
    document.addEventListener('astro:before-swap', (e) =>
        [
            ...(e as TransitionBeforeSwapEvent).newDocument.head.querySelectorAll(
                'link[as="font"]'
            )
        ].forEach((link) => link.remove())
    )
</script>

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>

<ClientRouter />
